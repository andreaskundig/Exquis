var requirejs = require("requirejs"),
    assert = require("assert");

var testNormalize = function(wp){
    var direction = [20, 100, 50];
    var normalized = wp._normalize(direction);
    
    assert.notEqual(1, wp._norm(direction));
    assert.equal(1, wp._norm(normalized));
    assert.deepEqual(normalized, wp._normalize(normalized));
};

var testMove0BounceB = function(wp){
    var startPoint = [100, 250, 0];
    var limits = [[0, 255], [0, 255], [0, 255]];
    var speed = 100 * 0.7878679656440357;
    var direction = [0, -.5, .5];
    var w = wp.makeWanderer(limits, direction, startPoint, speed);
    w.move();
    assert.deepEqual(w.coordinates, 
                     [ 100, 194.28932188134524, 55.71067811865475 ]);
};
var testNext0BounceB = function(wp){
    var startPoint = [100, 250, 0];
    var limits = [[0, 255], [0, 255], [0, 255]];
    var speed = 100 * 0.7878679656440357;
    var direction = wp._normalize([0, -.5, .5]);
    var n = wp._next(limits, direction, startPoint, speed);
    assert.deepEqual(n.point, [ 100, 194.28932188134524, 55.71067811865475 ]);
};

var testMove0BounceA = function(wp){
    var startPoint = [100, 255, 5];
    var limits = [[0, 255], [0, 255], [0, 255]];
    var speed = 100 * 0.07071067811865478  ;
    var direction = [0, -.5, -.5];
    var w = wp.makeWanderer(limits, direction, startPoint, speed);
    w.move();
    assert.deepEqual(w.coordinates, [ 100, 250, 0 ]);
};

var testMove1Bounce = function(wp){
    var startPoint = [100, 255, 5];
    var limits = [[0, 255], [0, 255], [0, 255]];
    var speed = 100 * (0.07071067811865478 + 0.7878679656440357) ;
    var direction = [0, -.5, -.5];
    var w = wp.makeWanderer(limits, direction, startPoint, speed);
    w.move();
    assert.deepEqual(w.coordinates, 
                     [ 100, 194.28932188134524, 55.71067811865475 ]);
};

var testMove3Bounce = function(wp){
    var limits = [[0, 255], [0, 255], [0, 255]];
    var startPoint = [100, 245, 15];
    var speed = 100;
    var direction = [0, .5, -.5];
    var w = wp.makeWanderer(limits, direction, startPoint, speed);
    w.move();
    assert.deepEqual(w.coordinates, 
                     [ 100, 194.28932188134524, 55.71067811865474 ]);
};

exports.test = function(){
    requirejs(['../public/bibs/wanderingPoint'], function(wanderingPoint){
        testNormalize(wanderingPoint);
        testMove0BounceB(wanderingPoint);
        testMove0BounceA(wanderingPoint);
        testNext0BounceB(wanderingPoint);
        testMove1Bounce(wanderingPoint);
        testMove3Bounce(wanderingPoint);
    });
};
