

* bugs
* ui
** menubar: icone [cog] / [nom de l'assemblage + pencil + x]
cog: fait apparaitre le groupe [nom pencil x] et les cogs des animations
pencil: ouvre le control panel d'assemblage
cogs des animations: ouvre le control panel d'une animation
x: fait apparaitre cog et disparaitre le reste, control panel compris.

** control panel assemblage: [icone pencil, nom d'assemblage], icone save
groupe edit, nom d'assemblage: click rend le nom éditable.
save: activé quand le nom est activé, ou une animation a changé de nom

un seul tab avec une liste d'assemblages. 
click sur le nom d'un assemblage le charge sans fermer le control panel

** control panel animation: tab animations, tab editeur, (tab settings quand on en aura)
une animation est chargée dès qu'elle est cliquée sur le tab animations

** filepicker hierarchique 

** trouver un moyen de laisser une animation réagir aux clicks sans ouvrir l'éditeur
actuellement c'est le hint qui prend le click. Une solution serait de ne mettre
les hints que sur les bords de l'animation (4 div minces)

** mecanisme pour signaler les animations à enregistrer

** éditer les librairies
comment recharger une librairie éditée avant qu'elle soit enregistrée? 
comment recharger la nouvelle version d'une librairie?
require.js a undef pour enlever une librairie, on peut ensuite la recharger.
comment charger la dernière version d'une librairie?
faire nos propres require1 et define1([x,y..], f) qui prennent le premier argument
trouvent la dernière version de x, y et appellent require/define de requirejs
avec la dernière version.
pour éviter d'avoir besoin d'écrire require1 au lieu de require dans les animations
on peut remplacer require par une variable locale dans le contexte de l'animation.

Comment recharger toutes les animations qui utilisent un librairie lorsqu'on met
à jour la librairie? Nos require1 et define1 doivent garder en mémoire les dépendances
des animations chargées. 

* new animations

* allow usage of files from external urls (github.com, pastebin, etc)
define a assemblage file with urls

* refactor dashboard so it can be included in a jsfiddle
so that jsfiddle's javascript editor can be used to write animations or assemblages
* faire en sorte que ça tourne sans serveur (ni internet?)
avoir des animations par defaut dans des fichiers javascripts chargés
par index.html
* TODO parameters changed with the slider are updated in the editor

paramsController 
parses the animation code, changes the parameter value, rewrites the code
(using paramsManager.js)
and replaces the code in the editor
using the method editorController.updateWithCanvasAnim(theCell.canvasAnim, parentId);

that method needs to be changed to work without parentId.
The parentId is needed to create the editor.
We can do without if we create the editor earlier.
We want to create it when we open the control panel,
In the method show in controlPanel.js
where we need a way to access parentId.

parentId is generated in tabs.js, which currently just returns a
method refreshActiveTab It should instead return an object
{refreshActiveTab, getParentId/Div(tabName)}

* TODO only call teardown if we're going to call a setup afterwards 
